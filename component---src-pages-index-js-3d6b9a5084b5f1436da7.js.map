{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js"],"names":["__webpack_exports__","_ref3","data","console","log","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","css","_ref","allMarkdownRemark","totalCount","edges","map","_ref4","node","key","id","rhythm","frontmatter","title","_ref2","date","excerpt","query","__webpack_require__","d","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","children","_public_static_d_2729156960_json__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","site","siteMetadata"],"mappings":"yRAOeA,EAAA,iBAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEhB,OADAC,QAAQC,IAAIF,GAEVG,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,MACEG,IAAGC,IAOLJ,OAAAC,EAAA,EAAAD,CAAA,UAAKH,EAAKQ,kBAAkBC,WAA5B,UACCT,EAAKQ,kBAAkBE,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChCV,OAAAC,EAAA,EAAAD,CAAA,OAAKW,IAAKD,EAAKE,IACbZ,OAAAC,EAAA,EAAAD,CAAA,MACEG,IAAKA,YAAF,iBACgBU,YAAO,KADvB,MAIFH,EAAKI,YAAYC,MAAO,IACzBf,OAAAC,EAAA,EAAAD,CAAA,QACEG,IAAGa,GADL,KAKKN,EAAKI,YAAYG,OAGxBjB,OAAAC,EAAA,EAAAD,CAAA,SAAIU,EAAKQ,eASd,IAAMC,EAAK,+CC9ClBC,EAAAC,EAAA1B,EAAA,sBAAAkB,IAAA,IAAAS,EAAAF,EAAA,KAAAG,EAAAH,EAAAI,EAAAF,GAAAG,EAAAL,EAAA,KAAAM,EAAAN,EAAAI,EAAAC,GAGME,EAAa,IAAIC,IAAWC,KAGrBhB,EAASc,EAAWd,yLCAlBlB,EAAA,WAAAC,GAAkB,IAAfkC,EAAelC,EAAfkC,SACVjC,EAAIkC,EAAAlC,KAWV,OACEG,OAAAC,EAAA,EAAAD,CAAA,OACEG,IAAKA,YAAF,yCAGUU,YAAO,GAHjB,gBAIcA,YAAO,KAJrB,MAOHb,OAAAC,EAAA,EAAAD,CAACgC,EAAA,KAAD,CAAMC,GAAE,KACNjC,OAAAC,EAAA,EAAAD,CAAA,MACEG,IAAKA,YAAF,iBACgBU,YAAO,GADvB,6CAMFhB,EAAKqC,KAAKC,aAAapB,QAG5Bf,OAAAC,EAAA,EAAAD,CAACgC,EAAA,KAAD,CACEC,GAAE,UACF9B,IAAGC,GAFL,SAQAJ,OAAAC,EAAA,EAAAD,CAACgC,EAAA,KAAD,CACEC,GAAE,YACF9B,IAAGa,GAFL,SASCc","file":"component---src-pages-index-js-3d6b9a5084b5f1436da7.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport { rhythm } from \"../utils/typography\"\n\n\nexport default ({ data }) => {\n  console.log(data)\n  return (\n    <Layout>\n      <div>\n        <h1\n          css={css`\n            display: inline-block;\n            border-bottom: 1px solid;\n        `}\n        >\n\n        </h1>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <h3\n              css={css`\n                margin-bottom: ${rhythm(1/4)};\n              `}\n            >\n              {node.frontmatter.title}{\" \"}\n              <span\n                css={css`\n                  color: #bbb;\n                `}\n              >\n                - {node.frontmatter.date}\n              </span>\n            </h3>\n            <p>{node.excerpt}</p>\n\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC}) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `,\n  )\n  return (\n    <div\n      css={css`\n        margin: 0 auto;\n        max-width: 700px;\n        padding: ${rhythm(2)};\n        padding-top: ${rhythm(1.5)};\n      `}\n    >\n      <Link to={`/`}>\n        <h3\n          css={css`\n            margin-bottom: ${rhythm(2)};\n            display: inline-block;\n            font-style: normal;\n          `}\n        >\n          {data.site.siteMetadata.title}\n        </h3>\n      </Link>\n      <Link\n        to={`/about/`}\n        css={css`\n          float: right;\n        `}\n      >\n        About\n      </Link>\n      <Link\n        to={`/my-files`}\n        css={css`\n        float: right;\n        margin-right: 30px;\n        `}\n      >\n        files\n      </Link>\n      {children}\n    </div>\n  )\n}\n"],"sourceRoot":""}